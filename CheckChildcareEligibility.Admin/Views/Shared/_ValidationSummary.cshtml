@using CheckChildcareEligibility.Admin.ViewModels
@model Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary

@{
    ViewData["Title"] = "There is a problem";

    List<string> propertyOrder = new List<string>();


    if (Model.ContainsKey("LastName"))
    {
        propertyOrder = typeof(ParentGuardian).GetProperties().Select(p => p.Name).ToList();
    }
    else if (Model.ContainsKey("EligibilityCode") || Model.ContainsKey("Child.EligibilityCode"))
    {
        propertyOrder = new List<string>
        {
            "Child.EligibilityCode",
            "NationalInsuranceNumber",
            "Child.ChildDateOfBirth.Day",
            "Child.ChildDateOfBirth.Month",
            "Child.ChildDateOfBirth.Year",
            "Child.ChildDateOfBirth.DateOfBirth"
        };
    }

    var flattenedErrors = Model
    .SelectMany(m => m.Value.Errors
        .Select(e => new
        {
            Field = m.Key,
            Error = e.ErrorMessage
        }))
    .DistinctBy(e => e.Error)
    .OrderBy(e => propertyOrder.IndexOf(e.Field))
    .ToList();
}


<div id="error-summary" class="govuk-error-summary" data-module="govuk-error-summary">
    <div role="alert">
        <h2 class="govuk-error-summary__title">There is a problem</h2>
        <div class="govuk-error-summary__body">
            <ul class="govuk-list govuk-error-summary__list">
                @foreach (var modelError in flattenedErrors)
                {
                    <li>
                        @if (string.IsNullOrEmpty(modelError.Field))
                        {
                            @modelError.Error
                        }
                        else
                        {
                            <a class="govuk-error-message" href="#@modelError.Field">@modelError.Error</a>
                        }
                    </li>
                }
            </ul>
        </div>
    </div>
</div>
